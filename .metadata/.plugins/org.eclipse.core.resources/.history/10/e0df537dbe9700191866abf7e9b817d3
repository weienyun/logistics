package com.sxt.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.sxt.mapper.BasicDataMapper;
import com.sxt.pojo.BasicData;
import com.sxt.pojo.BasicDataExample;
import com.sxt.service.IBasicService;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;
@Service
public class BasicServiceImpl implements IBasicService{
	@Resource
	private BasicDataMapper mapper;
	@Resource
	private Jedis jedis;
	
	private static final String key_Prefix = "basciData";
	
	@Override
	public List<BasicData> query(BasicData bd) {
		// TODO Auto-generated method stub
		//查看jedis缓存是否有  （basicData2 baseId 2 parentId 1 basename 开发部  basedesc 开发部）
		Set<String> keys = jedis.keys(key_Prefix+"*");
		List<BasicData> list = new ArrayList<BasicData>();
		if (keys!=null && keys.size()>0) {
			
		}else{
			BasicDataExample example = new BasicDataExample();
			list = mapper.selectByExample(example);
			//将数据添加到redis
			for (BasicData data : list) {
				jedis.hset(key_Prefix+data.getBaseId(),"baseId", data.getBaseId());
				
			}
		}
	
		
		return list;
	}

	@Override
	public void addBasicData(BasicData bd) {
		// TODO Auto-generated method stub
		//清空缓存
		this.clearRedis(key_Prefix);
		//添加
		mapper.insert(bd);
	}

	@Override
	public void deleteBasicData(int id) {
		// TODO Auto-generated method stub
		mapper.deleteByPrimaryKey(id);
	}

	@Override
	public void updateBasicData(BasicData bd) {
		// TODO Auto-generated method stub
		mapper.updateByPrimaryKeySelective(bd);
	}

	@Override
	public BasicData queryById(Integer baseId) {
		// TODO Auto-generated method stub
		
		return mapper.selectByPrimaryKey(baseId);
	}

	@Override
	public List<BasicData> queryParents() {
		// TODO Auto-generated method stub
		BasicDataExample example =new BasicDataExample();
		example.createCriteria().andParentIdIsNull();
		return mapper.selectByExample(example);
	}
	/*
	 * 清空缓存
	 */
	public void clearRedis(String keyPrefix){
		//获取所有key keys basicData*
		Set<String> keys = jedis.keys(keyPrefix+"*");
		for (String key : keys) {
			jedis.del(key);
		}
	}
	
}
