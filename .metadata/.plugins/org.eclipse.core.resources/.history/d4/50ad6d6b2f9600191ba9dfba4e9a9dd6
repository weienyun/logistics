package com.sxt.realm;

import java.util.List;

import javax.annotation.Resource;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;

import com.github.pagehelper.PageInfo;
import com.sxt.pojo.User;
import com.sxt.service.IUserService;
import com.sxt.vo.UserVo;
/**
 * 自定义域 认证授权
 * @author Administrator
 *
 */
public class MyRealm extends AuthorizingRealm {
	@Resource
	private IUserService userService;
	
	@Override
	protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
		// TODO Auto-generated method stub
		return null;
	}
	/**
	 * 认证 只认证用户（密码交给后面）
	 */
	@Override
	protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
		// TODO Auto-generated method stub
		AuthenticationInfo info = null;
		String username = (String) token.getPrincipal();
		UserVo vo = new UserVo();
		vo.getUser().setUserName(username);
		PageInfo<User> pageInfo = userService.query(vo);
		List<User> list = pageInfo.getList();
		if (list!=null&&list.size()==1) {
			System.out.println("==1=="+vo.getUser().getUserName());
			String credentials = list.get(0).getPassword();
			info =  new SimpleAuthenticationInfo(username, credentials, "myrealm");
		}
		System.out.println(info);
		return info;
	}

}
